$date
	Wed Jul  2 20:47:48 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module ALU_tb $end
$var wire 1 ! Zero $end
$var wire 32 " Result [31:0] $end
$var wire 1 # OverFlow $end
$var wire 1 $ Negative $end
$var wire 1 % Carry $end
$var reg 32 & A [31:0] $end
$var reg 3 ' ALUControl [2:0] $end
$var reg 32 ( B [31:0] $end
$scope module uut $end
$var wire 32 ) A [31:0] $end
$var wire 3 * ALUControl [2:0] $end
$var wire 32 + B [31:0] $end
$var wire 1 % Carry $end
$var wire 1 # OverFlow $end
$var wire 1 ! Zero $end
$var wire 32 , Sum [31:0] $end
$var wire 32 - Result [31:0] $end
$var wire 1 $ Negative $end
$var wire 1 . Cout $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0.
b100 -
b100 ,
b10 +
b0 *
b10 )
b10 (
b0 '
b10 &
0%
0$
0#
b100 "
0!
$end
#20
b11 "
b11 -
b11 ,
b1 '
b1 *
b101 &
b101 )
#40
0!
b1 "
b1 -
b1000 ,
b10 '
b10 *
b11 (
b11 +
#60
b111 "
b111 -
b11 ,
b11 '
b11 *
b10 (
b10 +
#80
0!
b1 "
b1 -
b11111111111111111111111111111101 ,
b101 '
b101 *
b101 (
b101 +
b10 &
b10 )
#100
1!
b0 "
b0 -
b11 ,
b10 (
b10 +
b101 &
b101 )
#120
1$
1#
0!
b10000000000000000000000000000000 "
b10000000000000000000000000000000 -
b10000000000000000000000000000000 ,
b0 '
b0 *
b1 (
b1 +
b1111111111111111111111111111111 &
b1111111111111111111111111111111 )
#140
0$
b1111111111111111111111111111111 "
b1111111111111111111111111111111 -
1#
b1111111111111111111111111111111 ,
b1 '
b1 *
b10000000000000000000000000000000 &
b10000000000000000000000000000000 )
#160
